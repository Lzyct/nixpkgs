{ config, pkgs, ... }:

{
  programs.starship = {
    enable = true;
#    enableFishIntegration = config.programs.fish.enable;
#    enableBashIntegration = config.programs.bash.enable;
#    enableTransience = config.programs.fish.enable;

    # Configuration written to ~/.config/starship.toml
    settings = {
      add_newline = true;
      command_timeout = 5000;
      character = {
         success_symbol = ''[ ‚Ü≥](bold yellow)'';
         error_symbol = ''[ ‚Ü≥](bold red)'';
       };

      package.disabled = false;
      palette = ''catppuccin_mocha'';

      gcloud = {
            format = '''';
      };

      palettes = {
        catppuccin_mocha = {
          rosewater = ''#f5e0dc'';
          flamingo = ''#f2cdcd'';
          pink = ''#f5c2e7'';
          mauve = ''#cba6f7'';
          red = ''#f38ba8'';
          maroon = ''#eba0ac'';
          peach = ''#fab387'';
          yellow = ''#f9e2af'';
          green = ''#a6e3a1'';
          teal = ''#94e2d5'';
          sky = ''#89dceb'';
          sapphire = ''#74c7ec'';
          blue = ''#89b4fa'';
          lavender = ''#b4befe'';
          text = ''#cdd6f4'';
          subtext1 = ''#bac2de'';
          subtext0 = ''#a6adc8'';
          overlay2 = ''#9399b2'';
          overlay1 = ''#7f849c'';
          overlay0 = ''#6c7086'';
          surface2 = ''#585b70'';
          surface1 = ''#45475a'';
          surface0 = ''#313244'';
          base = ''#1e1e2e'';
          mantle = ''#181825'';
          crust = ''#11111b'';
        };
      };

      # directory symbol nerd font


      directory = {
        format = ''[ÓÇ∂](fg:mantle)[ ÔÑï  $path ]($style)[ÓÇ¥](fg:mantle) '';
#        truncation_length = 255;
#         truncation_symbol = ''Û∞çª'';
#        truncate_to_repo = false;
#        use_logical_path = false;
        style = ''bg:mantle fg:blue bold'';
#        substitutions = {
#         Workspace = ''Û±É™ '';
#         Documents = ''Û∞àô '';
#         Downloads = ''ÔÄô '';
#         Music = ''ÔÄÅ '';
#         Pictures = ''ÔÄæ  '';
#         Desktop = ''ÔÑà  '';
#         Videos = ''ÔÄΩ  '';
#         Home = ''ÔÄï  '';
#        };
      };

      git_branch = {
        format = ''[ÓÇ∂](fg:mantle)[ $symbol $branch ]($style)[ÓÇ¥](fg:mantle) '';
        style = ''bg:mantle fg:sky'';
        symbol = ''Ôêò'';
      };

      git_status = {
        disabled = false;
        style = ''bg:mantle fg:red'';
        format = ''[ÓÇ∂](fg:mantle)([$all_status$ahead_behind]($style))[ÓÇ¥](fg:mantle) '';
        up_to_date = ''[ ‚úì ](bg:mantle fg:teal)'';
        untracked = ''[?($count)](bg:mantle fg:peach)'';
        stashed = ''[\$](bg:mantle fg:mauve)'';
        modified = ''[!($count)](bg:mantle fg:flamingo)'';
        renamed = ''[¬ª($count)](bg:mantle fg:mauve)'';
        deleted = ''[‚úò($count)](style)'';
        staged = ''[++($count)](bg:mantle fg:peach)'';
        ahead = ''[‚á°($count)](bg:mantle fg:teal)'';
        diverged = ''‚áï[[](bg:mantle fg:mauve)[‚á°($ahead_count)](bg:mantle fg:teal)[‚á£($behind_count)](bg:mantle fg:pink)[]](bg:mantle fg:mauve)'';
        behind = ''[‚á£($count)](bg:mantle fg:pink)'';
      };

      # Language and tool configurations
           aws = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($profile)(\($region\))(\[$duration\])]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:yellow'';
             symbol = ''ÓåΩ '';
           };

           c = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version(-$name))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óòû '';
           };

           cmake = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''Û∞ò≥ '';
           };

           cmd_duration = {
             format = ''[ÓÇ∂](fg:mantle)[Û∞Ñâ $duration]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
           };

           cobol = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''‚öôÔ∏è '';
           };

           conda = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$environment]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''üÖí '';
           };

           crystal = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:red'';
             symbol = ''ÓòØ '';
           };

           daml = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞èñ '';
           };

           dart = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óûò '';
           };

           deno = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''Óùª '';
           };

           docker_context = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$context]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞°® '';
           };

           dotnet = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)(üéØ $tfm)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:mauve'';
             symbol = ''Û∞™Æ '';
           };

           elixir = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version \(OTP $otp_version\))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:mauve'';
             symbol = ''Óâµ '';
           };

           elm = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:teal'';
             symbol = ''Óò¨ '';
           };

           erlang = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:red'';
             symbol = ''Óû± '';
           };

           fennel = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''ÓöØ '';
           };

           fossil_branch = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$branch]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞£ñ '';
           };

           golang = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:teal'';
             symbol = ''Óòß '';
           };

           gradle = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''Óô† '';
           };

           guix_shell = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Ôå• '';
           };

           haskell = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:mauve'';
             symbol = ''Óù∑ '';
           };

           haxe = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:flamingo'';
             symbol = ''Óô¶ '';
           };

           helm = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞ôè '';
           };

           hg_branch = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$branch]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:mauve'';
             symbol = ''ÓÇ† '';
           };

           java = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:red'';
             symbol = ''Óâñ '';
           };

           julia = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:mauve'';
             symbol = ''Óò§ '';
           };

           kotlin = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óò¥ '';
           };

           kubernetes = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$context( \($namespace\))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞†≥ '';
           };

           lua = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óò† '';
           };

           memory_usage = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol[$ram( | $swap)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:yellow'';
             symbol = ''Û∞çõ '';
           };

           meson = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$project]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''Û∞î∑ '';
           };

           nim = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:yellow'';
             symbol = ''Û∞Ü• '';
           };

           nix_shell = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$state( \($name\))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Ôåì '';
           };

           nodejs = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:green'';
             symbol = ''Û∞éô '';
           };

           ocaml = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)(\($switch_indicator$switch_name\))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:yellow'';
             symbol = ''Óô∫ '';
           };

           opa = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞ö© '';
           };

           openstack = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$cloud(\($project\))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞ô≠ '';
           };

           os = {
             format = ''[ÓÇ∂](fg:mantle)\[[$symbol]($style)\][ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbols = {
                    Arch = ''Û∞èú '';
                    Ubuntu = ''Û∞èö '';
                    Macos = ''ÔÖπ '';
                    Windows = ''Óúè '';
                };
           };

           package = {
              format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
              style = ''bg:mantle fg:yellow'';
              symbol = ''Û∞èó '';
           };

           perl = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óôæ '';
           };

           php = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óòà '';
           };

           pijul_channel = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$channel]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞ö© '';
           };

           pulumi = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$stack]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:mauve'';
             symbol = ''Û∞Üß '';
           };

           purescript = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:maroon'';
             symbol = ''Óò∞ '';
           };

           python = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$pyenv_prefix($version)(\($virtualenv\))]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:yellow'';
             symbol = ''Óúº '';
           };

           raku = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version-$vm_version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Óôü '';
           };

           red = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:red'';
             symbol = ''Óù≠ '';
           };

           ruby = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:red'';
             symbol = ''Óúπ '';
           };

           rust = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:flamingo'';
             symbol = ''Óû® '';
           };

           scala = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:red'';
             symbol = ''Óú∑ '';
           };

           spack = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol$environment]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:blue'';
             symbol = ''Û∞ô≤ '';
           };

           sudo = {
             format = ''[ÓÇ∂](fg:mantle)[as $symbol]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:yellow'';
             symbol = ''Û∞öÄ '';
           };

           swift = {
             format = ''[ÓÇ∂](fg:mantle)[$symbol($version)]($style)[ÓÇ¥](fg:mantle)'';
             style = ''bg:mantle fg:flamingo'';
             symbol = ''Óùï '';
           };

           time = {
             format = "[ÓÇ∂](fg:mantle)[ $time Û∞¥à ]($style)[ÓÇ¥](fg:mantle)";
             style = "bg:mantle fg:rose";
             time_format = "%I:%M%P";
             use_12hr = true;
           };
    } ;
  };
}
